/*
  Destroying every table with the same name for safety first
*/
DROP TABLE REGISTER CASCADE CONSTRAINTS;
DROP TABLE COMMISION CASCADE CONSTRAINTS;
DROP TABLE STORAGE_WORKER CASCADE CONSTRAINTS;
DROP TABLE MERCHANT CASCADE CONSTRAINTS;
DROP TABLE INVOICE CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;


-----------------------CREATING TABLES-----------------------
CREATE TABLE PRODUCT (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     NAME VARCHAR2(100) NOT NULL,
     ORIGIN VARCHAR2(100) NOT NULL,
     PRICE_IN_DOLLARS_FOR_KG NUMBER(10, 2) NOT NULL,
     AGE_IN_WEEKS INT NOT NULL,
     IN_STOCK_IN_TONS NUMBER(10, 2) DEFAULT 0 NOT NULL
);

CREATE TABLE REGISTER (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     TYPE SMALLINT DEFAULT 0 NOT NULL
     CONSTRAINT type_ck CHECK (TYPE BETWEEN 0 AND 1), /* 0 FOR PURCHASE 1 FOR SUPPLY */
     AMOUNT_IN_KG NUMBER(10, 2) NOT NULL,
     PRODUCT_ID INT REFERENCES PRODUCT(ID) ON DELETE SET NULL
);

-----SPECIALIZATION-----
--tabulka pro nadtyp + tabulka pro podtymy s primarnim klicem nadtypu
CREATE TABLE COMMISION (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     TYPE SMALLINT DEFAULT 0 NOT NULL
     CONSTRAINT type_ckc CHECK (TYPE BETWEEN 0 AND 1),
     REGISTER_ID INT REFERENCES REGISTER(ID) ON DELETE SET NULL,
     STORAGE_WORKER_ID INT REFERENCES STORAGE_WORKER(ID) ON DELETE SET NULL,
     MERCHANT_ID INT REFERENCES MERCHANT(ID) ON DELETE SET NULL
);

CREATE TABLE SUPPLY (
     ID INT PRIMARY KEY,
     SUPPLY_DATE DATE NOT NULL,
     COMMISION_ID INT REFERENCES COMMISION(ID) ON DELETE SET NULL
);

CREATE TABLE PURCHASE (
     ID INT PRIMARY KEY,
     PURCHASE_DATE DATE NOT NULL,
     COMMISION_ID INT REFERENCES COMMISION(ID) ON DELETE SET NULL
);





CREATE TABLE STORAGE_WORKER (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     FIRST_NAME VARCHAR2(30) NOT NULL,
     LAST_NAME VARCHAR2(30) NOT NULL,
     PHONE_NUMBER CHAR(9) NOT NULL
     CONSTRAINT phone_number_ck CHECK (PHONE_NUMBER BETWEEN '111111111' AND '999999999'),
     EMAIL VARCHAR2(100) NOT NULL
     CONSTRAINT email_ck CHECK(REGEXP_LIKE(
			EMAIL, '^[a-z]+[a-z0-9\.]*@[a-z0-9\.-]+\.[a-z]{2,}$', 'i'
	)),
     WAGE_IN_DOLLARS NUMBER(10, 2) NOT NULL
);

CREATE TABLE MERCHANT (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     FIRST_NAME VARCHAR2(30) NOT NULL,
     LAST_NAME VARCHAR2(30) NOT NULL,
     EMAIL VARCHAR2(100) NOT NULL
     CONSTRAINT email_ckm CHECK(REGEXP_LIKE(
         EMAIL, '^[a-z]+[a-z0-9\.]*@[a-z0-9\.-]+\.[a-z]{2,}$', 'i'
     )),
     ADDRESS VARCHAR2(100) NOT NULL
);

CREATE TABLE INVOICE (
     ID INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
     INVOICE_DATE DATE NOT NULL,
     COMMISION_ID INT REFERENCES COMMISION(ID) ON DELETE SET NULL
);

-----------------------INSERTING DATA-----------------------

INSERT INTO "PRODUCT" ("NAME", "ORIGIN", "PRICE_IN_DOLLARS_FOR_KG", "AGE_IN_WEEKS", "IN_STOCK_IN_TONS")
VALUES("TOMATO", "SPAIN", 10, 3, 10);
INSERT INTO "PRODUCT" ("NAME", "ORIGIN", "PRICE_IN_DOLLARS_FOR_KG", "AGE_IN_WEEKS", "IN_STOCK_IN_TONS")
VALUES("TOMATO", "CZ", 12, 4, 20);

INSERT INTO "REGISTER" ("TYPE", "AMOUNT_IN_KG")
VALUES(1, 100);
INSERT INTO "REGISTER" ("TYPE", "AMOUNT_IN_KG")
VALUES(0, 250);