/**
  destroying every table with same name for safety first
 */
DROP TABLE PRODUCT;/*produkt*/
DROP TABLE ORDER;/*contract*/
DROP TABLE REGISTER;/*rejstrik*/
DROP TABLE STORAGE_WORKER;/*skladnik*/
DROP TABLE MERCHANT;/*OBCHODNIK*/
DROP TABLE INVOICE;/*faktura*/


-----------------------CREATING TABLES-----------------------
CREATE TABLE "PRODUCT" (
     "ID" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "NAME" VARCHAR(100) NOT NULL,
     "ORIGIN" VARCHAR(100) NOT NULL,
     "PRICE_IN_DOLLARS_FOR_KG" INT NOT NULL,
     "AGE_IN_WEEKS" INT NOT NULL,
     "IN_STOCK_IN_TONS" INT DEFAULT 0 NOT NULL
     );

CREATE TABLE "register" (
     "ID" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "TYPE" SMALLINT DEFAULT 0 NOT NULL
     CONSTRAINT "type" CHECK ( TYPE BETWEEN 0 AND 1), /*0 FOR PURCHASE 1 FOR SUPPLY*/
     "AMOUNT_IN_KG" INT NOT NULL,
     "PRODUCT_ID" INT DEFAULT NULL,
     CONSTRAINT "product_id" FOREIGN KEY (PRODUCT_ID) REFERENCES "PRODUCT" ("ID") --product id je id v tabulce produkt
                ON DELETE SET NULL
     );

CREATE TABLE "ORDER" (
     "ID" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "TYPE" SMALLINT DEFAULT 0 NOT NULL
     CONSTRAINT "type" CHECK ( TYPE BETWEEN 0 AND 1), /*0 FOR PURCHASE 1 FOR SUPPLY*/
     "PRICE_IN_DOLLARS" INT NOT NULL,
     "AMOUNT" INT NOT NULL,
     "REGISTER_ID" INT DEFAULT NULL,
     CONSTRAINT "register_id" FOREIGN KEY (REGISTER_ID) REFERENCES "REGISTER" ("ID") --product id je id v tabulce produkt
                ON DELETE SET NULL
     );

CREATE TABLE "STORAGE_WORKER" (
     "id" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "FIRST_NAME" VARCHAR(30) NOT NULL,
     "LAST_NAME" VARCHAR(30) NOT NULL,
     "PHONE_NUMBER" INT NOT NULL
     CONSTRAINT "phone_number" CHECK ( PHONE_NUMBER BETWEEN 111111111 AND 999999999),
     "EMAIL" VARCHAR(100) NOT NULL
     CHECK(REGEXP_LIKE(
			"EMAIL", '^[a-z]+[a-z0-9\.]*@[a-z0-9\.-]+\.[a-z]{2,}$', 'i'
		)),
     "WAGE_IN_DOLLARS" INT NOT NULL
     );
CREATE TABLE "MERCHANT" (
     "id" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "FIRST_NAME" VARCHAR(30) NOT NULL,
     "LAST_NAME" VARCHAR(30) NOT NULL,
     "EMAIL" VARCHAR(100) NOT NULL
        CHECK(REGEXP_LIKE(
            "EMAIL", '^[a-z]+[a-z0-9\.]*@[a-z0-9\.-]+\.[a-z]{2,}$', 'i'
        )),
     "ADDRESS" VARCHAR(100) NOT NULL
     );

CREATE TABLE "INVOICE" (
     "id" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "DATE" DATE NOT NULL,
     "ORDER" INT DEFAULT NULL,
     CONSTRAINT "order_id" FOREIGN KEY (ORDER_ID) REFERENCES "ORDER" ("ID") --order id je id v tabulce zakazka
                ON DELETE SET NULL
    ); 
     
     
CREATE TABLE "ORDER" (
     "id" INT GENERATED AS IDENTITY NOT NULL PRIMARY KEY,
     "TYPE" SMALLINT DEFAULT 0 NOT NULL
     CONSTRAINT "TYPE" CHECK ( TYPE BETWEEN 0 AND 1),
     );

CREATE TABLE "SUPPLY" (
     "id" INT PRIMARY KEY,
     "DATE" DATE NOT NULL,
     CONSTRAINT "REGISTER_ID" FOREIGN KEY (REGISTER_ID) REFERENCES "REGISTER" ("ID") 
          ON DELETE SET NULL,
     CONSTRAINT "STORAGE_WORKER_ID" FOREIGN KEY (STORAGE_WORKER_ID) REFERENCES "STORAGE_WORKER" ("ID") 
          ON DELETE SET NULL,
     CONSTRAINT "MERCHANT_ID" FOREIGN KEY (MERCHANT_ID) REFERENCES "MERCHANT" ("ID")
          ON DELETE SET NULL,
     CONSTRAINT "order_id" FOREIGN KEY (ORDER_ID) REFERENCES "ORDER" ("ID")
          ON DELETE SET NULL
);

CREATE TABLE "PURCHASE" (
     "id" INT PRIMARY KEY,
     "DATE" DATE NOT NULL,
     CONSTRAINT "REGISTER_ID" FOREIGN KEY (REGISTER_ID) REFERENCES "REGISTER" ("ID") 
          ON DELETE SET NULL,
     CONSTRAINT "STORAGE_WORKER_ID" FOREIGN KEY (STORAGE_WORKER_ID) REFERENCES "STORAGE_WORKER" ("ID") 
          ON DELETE SET NULL,
     CONSTRAINT "MERCHANT_ID" FOREIGN KEY (MERCHANT_ID) REFERENCES "MERCHANT" ("ID")
          ON DELETE SET NULL,
     CONSTRAINT "order_id" FOREIGN KEY (ORDER_ID) REFERENCES "ORDER" ("ID")
          ON DELETE SET NULL
);

-----------------------INSERTING DATA-----------------------

INSERT INTO "PRODUCT" ("NAME", "ORIGIN", "PRICE_IN_DOLLARS_FOR_KG", "AGE_IN_WEEKS", "IN_STOCK_IN_TONS")
VALUES("TOMATO", "SPAIN", 10, 3, 10);
INSERT INTO "PRODUCT" ("NAME", "ORIGIN", "PRICE_IN_DOLLARS_FOR_KG", "AGE_IN_WEEKS", "IN_STOCK_IN_TONS")
VALUES("TOMATO", "CZ", 12, 4, 20);

INSERT INTO "REGISTER" ("TYPE", "AMOUNT_IN_KG")
VALUES(1, 100);
INSERT INTO "REGISTER" ("TYPE", "AMOUNT_IN_KG")
VALUES(0, 250);